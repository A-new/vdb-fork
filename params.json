{"note":"Don't delete this file! It's used internally to help with page regeneration.","google":"UA-36315282-1","name":"Vdb-fork","tagline":"A fork of @invisig0th's VDB, for bugfixes, and other stuff. ","body":"This is my personal fork of [@invisig0th](https://twitter.com/invisig0th)'s VDB, for bugfixes, documentation and other stuff. \r\n\r\nI'm going to attempt to fix a bug or two I've stumbled across, and maybe come up with some tests for VDB. This will also serve as a good point for documentation (currently Epydocs until I discover enough to start some Sphinx documentation). \r\n\r\n# Intro\r\nVDB is a debugger written using the vtrace API.  For the list\r\nof kewl stuff and supported features, see the vtrace docs.\r\n\r\n\r\n# Usage\r\nI usually run it directly from the checkout without going through\r\nany kind of installation.  From a windows/unix command prompt,\r\n\"python vdbbin\" should suffice.\r\n\r\nIf you want to use the gui (on mac/linux/windows) you will need\r\na working install of PyQT4\r\n\r\nI'm not really one for writing a LOT of docs, but explore and have fun.\r\n\r\n# Known Issues\r\n\r\n * -R and firewalls\r\n    Remove debugging with vdb is possible with the use of the\r\n    \"server\" command and the -R option.  *However*, cobra\r\n    (the underlying RMI model) will attempt transparent reconnection\r\n    for robustness.  This means that firewalls can cause it to hang\r\n    as it tries to reconnect.  This also means that one socket dying\r\n    once doesn't destroy your debugging session ;)\r\n\r\n * NonBlocking or ThreadWrap modes\r\n    Though these modes are listed in the modes selection interface\r\n    you may *not* turn them off.  They are critical to the function\r\n    of vdb as a non-blocking debugger...\r\n"}